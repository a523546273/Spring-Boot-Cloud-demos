server.port=8084

mybatis.config-location=classpath:META-INF/mybatis-config.xml
spring.shardingsphere.datasource.names=master0,master0slave,master1,master1slave

#数据源
spring.shardingsphere.datasource.master0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.master0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.master0.url=jdbc:mysql://localhost:3306/ds_0?characterEncoding=utf-8
spring.shardingsphere.datasource.master0.username=root
spring.shardingsphere.datasource.master0.password=root

spring.shardingsphere.datasource.master0slave.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.master0slave.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.master0slave.url=jdbc:mysql://localhost:3306/ds0slave?characterEncoding=utf-8
spring.shardingsphere.datasource.master0slave.username=root
spring.shardingsphere.datasource.master0slave.password=root

spring.shardingsphere.datasource.master1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.master1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.master1.url=jdbc:mysql://localhost:3306/ds_1?characterEncoding=utf-8
spring.shardingsphere.datasource.master1.username=root
spring.shardingsphere.datasource.master1.password=root

spring.shardingsphere.datasource.master1slave.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.master1slave.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.master1slave.url=jdbc:mysql://localhost:3306/ds1slave?characterEncoding=utf-8
spring.shardingsphere.datasource.master1slave.username=root
spring.shardingsphere.datasource.master1slave.password=root
#分表配置
spring.shardingsphere.sharding.tables.user.actualDataNodes=ds$->{0..1}.user_$->{0..2}
spring.shardingsphere.sharding.tables.user.tableStrategy.inline.shardingColumn=id
spring.shardingsphere.sharding.tables.user.tableStrategy.inline..algorithmExpression=user_$->{id%3}
spring.shardingsphere.sharding.tables.user.keyGenerator.column=id
spring.shardingsphere.sharding.tables.user.keyGenerator.type=SNOWFLAKE


# 分库配置
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=ds$->{id%2}


# 分库配置
#spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=id
#spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=ds$->{id % 2}
# 不分库分表的数据源指定
#spring.shardingsphere.sharding.default-data-source-name=ds0
# 广播表，每个节点复制一份，适用于配置类的数据
#spring.shardingsphere.sharding.broadcast-tables=loudong


#读写分离
spring.shardingsphere.sharding.master-slave-rules.ds0.masterDataSourceName=master0
spring.shardingsphere.sharding.master-slave-rules.ds0.slaveDataSourceNames=master0slave
spring.shardingsphere.sharding.master-slave-rules.ds1.masterDataSourceName=master1
spring.shardingsphere.sharding.master-slave-rules.ds1.slaveDataSourceNames=master1slave



